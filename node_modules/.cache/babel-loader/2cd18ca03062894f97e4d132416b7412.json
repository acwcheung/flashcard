{"ast":null,"code":"var _jsxFileName = \"/Users/ashleycheung/Documents/WebDev/flashcard/src/Containers/App.js\";\nimport React, { Component } from 'react';\nimport CardList from '../Components/CardList';\nimport OneMovie from '../Components/OneMovie';\nimport apiKey from '../api.js';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSearch = e => {\n      this.setState({\n        searchfield: e.target.value\n      });\n    };\n\n    this.movieClick = id => {\n      fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}`).then(resp => resp.json()).then(movie => {\n        this.setState({\n          movieSelect: movie,\n          route: !this.state.route\n        });\n      });\n    };\n\n    this.state = {\n      movies: [[], [], []],\n      movieSelect: {},\n      route: false,\n      searchfield: ''\n    };\n  }\n\n  componentDidMount() {\n    const movieCategories = ['popular', 'top_rated', 'upcoming'];\n    const movieLists = movieCategories.map((movieCategory, i) => {\n      fetch(`https://api.themoviedb.org/3/movie/${movieCategory}?api_key=${apiKey}&language=en-US&page=1`).then(resp => resp.json()).then(data => {\n        console.log(i, data.results);\n      });\n    });\n  }\n\n  render() {\n    const {\n      movies,\n      movieSelect,\n      route\n    } = this.state;\n    return (\n      /*<navigation /> inside is a searchfield*/\n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, !route ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Popular\"), React.createElement(CardList, {\n        movieClick: this.movieClick,\n        movies: movies,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(CardList, {\n        movieClick: this.movieClick,\n        movies: movies,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Top-rated\"), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Upcoming\")) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(OneMovie, {\n        movieSelect: movieSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })))\n    );\n  }\n\n}\n\nexport default App;\n/*\nmovie database\n\napi key = 17c3fa534657a7495834bc8fb45a9c05\nexample: https://api.themoviedb.org/3/movie/550?api_key=17c3fa534657a7495834bc8fb45a9c05\n\nurl structure as below\n- base url: https://api.themoviedb.org/3\n- 3 ways to search: /search; /discover; /find\n- movie method: /movie?\n- api_key={}\n- query=<xxx>\n\n1. text-based search by string\nhttps://api.themoviedb.org/3/search/movie?api_key={api_key}&query=Jack+Reacher\n\n2. search by id\nhttps://api.themoviedb.org/3/movie/343611?api_key={api_key}\n\n3. poster path\nbase url: http://image.tmdb.org/t/p/\nsize: \"w92\", \"w154\", \"w185\", \"w342\", \"w500\", \"w780\", or \"original\"\nposter_path: xBHvZcjRiWyobQ9kxBhO6B2dtRI.jpg\n\nbackdrop_path: 5BwqwxMEjeFtdknRV792Svo0K1v.jpg\nhttps://image.tmdb.org/t/p/w1280//5BwqwxMEjeFtdknRV792Svo0K1v.jpg\n\n*/","map":{"version":3,"sources":["/Users/ashleycheung/Documents/WebDev/flashcard/src/Containers/App.js"],"names":["React","Component","CardList","OneMovie","apiKey","App","constructor","props","handleSearch","e","setState","searchfield","target","value","movieClick","id","fetch","then","resp","json","movie","movieSelect","route","state","movies","componentDidMount","movieCategories","movieLists","map","movieCategory","i","data","console","log","results","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAO,WAAP;;AAGA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAC1BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAuBnBC,YAvBmB,GAuBHC,CAAD,IAAO;AACpB,WAAKC,QAAL,CAAc;AACZC,QAAAA,WAAW,EAAEF,CAAC,CAACG,MAAF,CAASC;AADV,OAAd;AAGD,KA3BkB;;AAAA,SA6BnBC,UA7BmB,GA6BLC,EAAD,IAAQ;AACnBC,MAAAA,KAAK,CAAE,sCAAqCD,EAAG,YAAWX,MAAO,EAA5D,CAAL,CACGa,IADH,CACQC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADhB,EAEGF,IAFH,CAEQG,KAAK,IAAI;AACb,aAAKV,QAAL,CAAc;AACZW,UAAAA,WAAW,EAAED,KADD;AAEZE,UAAAA,KAAK,EAAE,CAAC,KAAKC,KAAL,CAAWD;AAFP,SAAd;AAID,OAPH;AAQD,KAtCkB;;AAEjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CADG;AAEXH,MAAAA,WAAW,EAAE,EAFF;AAGXC,MAAAA,KAAK,EAAE,KAHI;AAIXX,MAAAA,WAAW,EAAE;AAJF,KAAb;AAMD;;AAEDc,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,eAAe,GAAG,CAAC,SAAD,EAAY,WAAZ,EAAyB,UAAzB,CAAxB;AACA,UAAMC,UAAU,GAAGD,eAAe,CAACE,GAAhB,CAAoB,CAACC,aAAD,EAAgBC,CAAhB,KAAsB;AAC3Dd,MAAAA,KAAK,CAAE,sCAAqCa,aAAc,YAAWzB,MAAO,wBAAvE,CAAL,CACGa,IADH,CACQC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADhB,EAEGF,IAFH,CAEQc,IAAI,IAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYH,CAAZ,EAAeC,IAAI,CAACG,OAApB;AACD,OAJH;AAKD,KANkB,CAAnB;AASD;;AAmBDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEX,MAAAA,MAAF;AAAUH,MAAAA,WAAV;AAAuBC,MAAAA;AAAvB,QAAiC,KAAKC,KAA5C;AACA;AACE;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,CAACD,KAAD,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,EAGE,oBAAC,QAAD;AACE,QAAA,UAAU,EAAE,KAAKR,UADnB;AAEE,QAAA,MAAM,EAAEU,MAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAOE,oBAAC,QAAD;AACE,QAAA,UAAU,EAAE,KAAKV,UADnB;AAEE,QAAA,MAAM,EAAEU,MAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAXF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAZF,CADD,GAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,QAAD;AAAU,QAAA,WAAW,EAAEH,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CAjBL;AAFF;AAyBD;;AApEyB;;AAyE5B,eAAehB,GAAf;AAKA","sourcesContent":["import React, { Component } from 'react';\nimport CardList from '../Components/CardList';\nimport OneMovie from '../Components/OneMovie';\nimport apiKey from '../api.js';\nimport './App.css';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movies: [[], [], []],\n      movieSelect: {},\n      route: false,      \n      searchfield: ''    \n    }    \n  };\n\n  componentDidMount() {\n    const movieCategories = ['popular', 'top_rated', 'upcoming'];\n    const movieLists = movieCategories.map((movieCategory, i) => {\n      fetch(`https://api.themoviedb.org/3/movie/${movieCategory}?api_key=${apiKey}&language=en-US&page=1`)  \n        .then(resp => resp.json())\n        .then(data => {\n          console.log(i, data.results)\n        })  \n    })\n    \n      \n  };\n\n  handleSearch = (e) => {\n    this.setState({\n      searchfield: e.target.value\n    });\n  };\n\n  movieClick = (id) => {\n    fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}`)\n      .then(resp => resp.json())\n      .then(movie => {        \n        this.setState({\n          movieSelect: movie,\n          route: !this.state.route          \n        });    \n      })        \n  };\n\n  render() {\n    const { movies, movieSelect, route } = this.state;    \n    return (\n      /*<navigation /> inside is a searchfield*/\n      <div>\n        {!route?\n          <div>\n            {/*<showcase /> */}            \n            <h1>Popular</h1>\n            <CardList \n              movieClick={this.movieClick}\n              movies={movies}          \n            />\n            <CardList \n              movieClick={this.movieClick}\n              movies={movies}          \n            />\n            <h1>Top-rated</h1>\n            <h1>Upcoming</h1>\n            \n          </div>\n          :<div>\n            <OneMovie movieSelect={movieSelect} />\n          </div>\n        }\n      </div>\n    )\n  }  \n}\n  \n\n\nexport default App;\n\n\n\n\n/*\nmovie database\n\napi key = 17c3fa534657a7495834bc8fb45a9c05\nexample: https://api.themoviedb.org/3/movie/550?api_key=17c3fa534657a7495834bc8fb45a9c05\n\nurl structure as below\n- base url: https://api.themoviedb.org/3\n- 3 ways to search: /search; /discover; /find\n- movie method: /movie?\n- api_key={}\n- query=<xxx>\n\n1. text-based search by string\nhttps://api.themoviedb.org/3/search/movie?api_key={api_key}&query=Jack+Reacher\n\n2. search by id\nhttps://api.themoviedb.org/3/movie/343611?api_key={api_key}\n\n3. poster path\nbase url: http://image.tmdb.org/t/p/\nsize: \"w92\", \"w154\", \"w185\", \"w342\", \"w500\", \"w780\", or \"original\"\nposter_path: xBHvZcjRiWyobQ9kxBhO6B2dtRI.jpg\n\nbackdrop_path: 5BwqwxMEjeFtdknRV792Svo0K1v.jpg\nhttps://image.tmdb.org/t/p/w1280//5BwqwxMEjeFtdknRV792Svo0K1v.jpg\n\n*/\n\n\n"]},"metadata":{},"sourceType":"module"}