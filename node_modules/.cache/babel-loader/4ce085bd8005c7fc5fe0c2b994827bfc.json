{"ast":null,"code":"var _jsxFileName = \"/Users/ashleycheung/Documents/WebDev/flashcard/src/Containers/App.js\";\nimport React, { Component } from 'react';\nimport CardList from '../Components/CardList';\nimport OneMovie from '../Components/OneMovie';\nimport Showcase from '../Components/Showcase';\nimport Navigation from '../Components/Navigation';\nimport apiKey from '../api.js';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSearch = e => {\n      let text = e.target.value;\n\n      if (text) {\n        return;\n      }\n\n      ;\n      fetch(`https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${text}`).then(resp => resp.json()).then(movies => this.setState({\n        searchResults: movies.results\n      }));\n    };\n\n    this.movieClick = id => {\n      fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}`).then(resp => resp.json()).then(movie => {\n        if (movie) {\n          this.setState({\n            movieSelect: movie,\n            route: 'movie'\n          });\n        } else {\n          console.log(movie);\n        }\n      });\n      fetch(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${apiKey}`).then(resp => resp.json()).then(credit => this.setState({\n        cast: credit.cast,\n        crew: credit.crew\n      }));\n    };\n\n    this.logoClick = route => {\n      this.setState({\n        route: route\n      });\n    };\n\n    this.handleScroll = () => {\n      let y = window.scrollY; //use plain js codes\n\n      const navbar = document.querySelector('.navbar');\n\n      if (y > 60) {\n        navbar.style.backgroundColor = \"black\";\n      } else {\n        navbar.style.backgroundColor = \"transparent\";\n      }\n    };\n\n    this.state = {\n      popular: [],\n      top_rated: [],\n      upcoming: [],\n      movieSelect: {},\n      cast: [],\n      crew: [],\n      route: 'home',\n      searchResults: []\n    };\n  }\n\n  componentDidMount() {\n    const movieCategories = ['popular', 'top_rated', 'upcoming'];\n    movieCategories.forEach((movieCategory, i) => {\n      fetch(`https://api.themoviedb.org/3/movie/${movieCategory}?api_key=${apiKey}&language=en-US&page=1`).then(resp => resp.json()).then(data => this.setState({\n        [movieCategory]: data.results\n      }));\n    }); //scroll event     \n\n    window.addEventListener('scroll', this.handleScroll, true);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  render() {\n    let moviePick;\n    const {\n      popular,\n      top_rated,\n      upcoming,\n      movieSelect,\n      cast,\n      crew,\n      route,\n      searchResults\n    } = this.state; //data  validation for state properties\n\n    if (!popular[0] || !top_rated[0] || !upcoming[0]) {\n      moviePick = [];\n    } else {\n      moviePick = [popular[0], top_rated[3], upcoming[0]];\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Navigation, {\n      logoClick: this.logoClick,\n      handleScroll: this.handleScroll,\n      handleSearch: this.handleSearch,\n      searchResults: searchResults,\n      movieClick: this.movieClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), route === 'home' ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Showcase, {\n      movies: moviePick,\n      movieClick: this.movieClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"movie-category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      id: \"popular\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Popular\"), React.createElement(CardList, {\n      movieClick: this.movieClick,\n      movies: popular,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      id: \"top-rated\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Top-rated\"), React.createElement(CardList, {\n      movieClick: this.movieClick,\n      movies: top_rated,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      id: \"upcoming\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Upcoming\"), React.createElement(CardList, {\n      movieClick: this.movieClick,\n      movies: upcoming,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(OneMovie, {\n      movieSelect: movieSelect,\n      cast: cast,\n      crew: crew,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;\n/*\nmovie database\n\napi key = 17c3fa534657a7495834bc8fb45a9c05\nexample: https://api.themoviedb.org/3/movie/550?api_key=17c3fa534657a7495834bc8fb45a9c05\n\nurl structure as below\n- base url: https://api.themoviedb.org/3\n- 3 ways to search: /search; /discover; /find\n- movie method: /movie?\n- api_key={}\n- query=<xxx>\n\n1. text-based search by string\nhttps://api.themoviedb.org/3/search/movie?api_key={api_key}&query=Jack+Reacher\n\n2. search by id\nhttps://api.themoviedb.org/3/movie/343611?api_key={api_key}\n\n3. poster path\nbase url: http://image.tmdb.org/t/p/\nsize: \"w92\", \"w154\", \"w185\", \"w342\", \"w500\", \"w780\", or \"original\"\nposter_path: xBHvZcjRiWyobQ9kxBhO6B2dtRI.jpg\n\nbackdrop_path: 5BwqwxMEjeFtdknRV792Svo0K1v.jpg\nhttps://image.tmdb.org/t/p/w1280//5BwqwxMEjeFtdknRV792Svo0K1v.jpg\n\n*/","map":{"version":3,"sources":["/Users/ashleycheung/Documents/WebDev/flashcard/src/Containers/App.js"],"names":["React","Component","CardList","OneMovie","Showcase","Navigation","apiKey","App","constructor","props","handleSearch","e","text","target","value","fetch","then","resp","json","movies","setState","searchResults","results","movieClick","id","movie","movieSelect","route","console","log","credit","cast","crew","logoClick","handleScroll","y","window","scrollY","navbar","document","querySelector","style","backgroundColor","state","popular","top_rated","upcoming","componentDidMount","movieCategories","forEach","movieCategory","i","data","addEventListener","componentWillUnmount","removeEventListener","render","moviePick"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport CardList from '../Components/CardList';\nimport OneMovie from '../Components/OneMovie';\nimport Showcase from '../Components/Showcase';\nimport Navigation from '../Components/Navigation';\nimport apiKey from '../api.js';\nimport './App.css';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      popular: [],\n      top_rated: [],\n      upcoming: [],      \n      movieSelect: {},\n      cast: [],\n      crew:[],      \n      route: 'home',      \n      searchResults: []    \n    }    \n  };\n\n  componentDidMount() {\n    const movieCategories = ['popular', 'top_rated', 'upcoming'];\n    movieCategories.forEach((movieCategory, i) => {\n      fetch(`https://api.themoviedb.org/3/movie/${movieCategory}?api_key=${apiKey}&language=en-US&page=1`)  \n        .then(resp => resp.json())\n        .then(data => this.setState({[movieCategory]: data.results}) )          \n    })\n    //scroll event     \n    window.addEventListener('scroll', this.handleScroll, true);\n  };\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  handleSearch = (e) => {\n    let text = e.target.value;\n    if(text) { return };\n    fetch(`https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${text}`)\n      .then(resp => resp.json())\n      .then(movies => this.setState({ searchResults: movies.results }));\n  };\n\n  movieClick = (id) => {\n    fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}`)\n      .then(resp => resp.json())\n      .then(movie => {\n        if(movie) { this.setState({movieSelect: movie, route: 'movie'});      \n        } else { console.log(movie) }               \n      })\n      \n    fetch(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${apiKey}`)\n      .then(resp => resp.json())\n      .then(credit => this.setState({\n        cast: credit.cast,\n        crew: credit.crew\n      }))          \n  };\n\n  logoClick = (route) => {\n    this.setState({route: route})          \n  }\n\n  handleScroll = () => {\n    let y = window.scrollY;\n    //use plain js codes\n    const navbar = document.querySelector('.navbar');    \n    if(y > 60) {\n      navbar.style.backgroundColor = \"black\";\n    } else {\n      navbar.style.backgroundColor = \"transparent\";\n    }\n  }\n\n  render() {    \n    let moviePick;    \n    const { popular, top_rated, upcoming, movieSelect, cast, crew, route, searchResults } = this.state;\n    //data  validation for state properties\n    if(!popular[0] || !top_rated[0] || !upcoming[0]) {\n      moviePick = []  \n    } else {\n      moviePick = [popular[0], top_rated[3], upcoming[0]]  \n    }\n    \n    return (      \n      <div>\n        <Navigation           \n          logoClick={this.logoClick} \n          handleScroll={this.handleScroll}\n          handleSearch={this.handleSearch}\n          searchResults={searchResults}\n          movieClick={this.movieClick}\n        />\n        {route === 'home'?\n          <div>            \n            <Showcase \n              movies={moviePick}\n              movieClick={this.movieClick}\n            />\n            <div className=\"movie-category\">\n              <h1 id=\"popular\">Popular</h1>\n              <CardList \n                movieClick={this.movieClick}\n                movies={popular}          \n              />\n              <h1 id=\"top-rated\">Top-rated</h1>\n              <CardList \n                movieClick={this.movieClick}\n                movies={top_rated}          \n              />\n              <h1 id=\"upcoming\">Upcoming</h1>\n              <CardList \n                movieClick={this.movieClick}\n                movies={upcoming}          \n              />  \n            </div>                       \n          </div>\n          :<div>            \n            <OneMovie \n              movieSelect={movieSelect} \n              cast={cast}\n              crew={crew}\n            />\n          </div>\n        }\n      </div>\n    )\n  }  \n}\n  \n\n\nexport default App;\n\n\n\n\n/*\nmovie database\n\napi key = 17c3fa534657a7495834bc8fb45a9c05\nexample: https://api.themoviedb.org/3/movie/550?api_key=17c3fa534657a7495834bc8fb45a9c05\n\nurl structure as below\n- base url: https://api.themoviedb.org/3\n- 3 ways to search: /search; /discover; /find\n- movie method: /movie?\n- api_key={}\n- query=<xxx>\n\n1. text-based search by string\nhttps://api.themoviedb.org/3/search/movie?api_key={api_key}&query=Jack+Reacher\n\n2. search by id\nhttps://api.themoviedb.org/3/movie/343611?api_key={api_key}\n\n3. poster path\nbase url: http://image.tmdb.org/t/p/\nsize: \"w92\", \"w154\", \"w185\", \"w342\", \"w500\", \"w780\", or \"original\"\nposter_path: xBHvZcjRiWyobQ9kxBhO6B2dtRI.jpg\n\nbackdrop_path: 5BwqwxMEjeFtdknRV792Svo0K1v.jpg\nhttps://image.tmdb.org/t/p/w1280//5BwqwxMEjeFtdknRV792Svo0K1v.jpg\n\n*/\n\n\n"]},"metadata":{},"sourceType":"module"}