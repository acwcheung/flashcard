{"ast":null,"code":"var _jsxFileName = \"/Users/ashleycheung/Documents/WebDev/flashcard/src/Components/OneMovie.js\";\nimport React from 'react';\n\nfunction OneMovie({\n  movieSelect,\n  cast,\n  crew\n}) {\n  const {\n    backdrop_path,\n    title,\n    vote_average,\n    tagline,\n    overview,\n    release_date,\n    budget,\n    poster_path,\n    genres,\n    runtime,\n    revenue\n  } = movieSelect;\n  let directorName = '';\n  const director = crew.find(crew => crew.job === 'Director');\n\n  if (!director) {\n    return;\n  } else {\n    directorName = director.name;\n  }\n\n  const itemList = (array, key) => {\n    let newArray = [];\n    array.forEach(item => newArray.push(item[key]));\n    return newArray.join(', ').replace(/,$/, \"\");\n  };\n\n  const profileList = array => {\n    return array.map(item => {\n      return React.createElement(\"div\", {\n        className: \"cast-profile\",\n        key: item['cast_id'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: `http://image.tmdb.org/t/p/w92/${item['profile_path']}`,\n        alt: item['name'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, item['name']), React.createElement(\"p\", {\n        className: \"character\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, item['character']));\n    });\n  };\n\n  const topCast = cast.slice(0, 5);\n  const topCrew = crew.slice(0, 5);\n  const castList = itemList(topCast, 'name');\n  const genreList = itemList(genres, 'name');\n  const castProfile = profileList(topCast);\n  const crewProfile = profileList(topCrew);\n  return React.createElement(\"div\", {\n    className: \"one-movie\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"showcase\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: `http://image.tmdb.org/t/p/w1280/${backdrop_path}`,\n    alt: title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, title), React.createElement(\"p\", {\n    className: \"rating\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Rating: \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, vote_average)), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, tagline))), React.createElement(\"div\", {\n    className: \"up-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"details\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, title), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Director: \", directorName), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Starring: \", castList), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Release date: \", release_date), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Runtime: \", runtime === 0 ? \"Not available\" : `${runtime}minuites`), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Revenue: \", revenue === 0 ? \"Not available\" : new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD'\n  }).format(revenue)), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Budget: \", budget === 0 ? \"Not available\" : new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD'\n  }).format(budget)), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Genres: \", genreList), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Plot:\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), overview)), React.createElement(\"img\", {\n    src: `http://image.tmdb.org/t/p/w342/${poster_path}`,\n    alt: title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"lower-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Top Cast\"), React.createElement(\"div\", {\n    className: \"cast-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, castProfile), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Top Crew\"), React.createElement(\"div\", {\n    className: \"crew-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, crewProfile)));\n}\n\nexport default OneMovie;","map":{"version":3,"sources":["/Users/ashleycheung/Documents/WebDev/flashcard/src/Components/OneMovie.js"],"names":["React","OneMovie","movieSelect","cast","crew","backdrop_path","title","vote_average","tagline","overview","release_date","budget","poster_path","genres","runtime","revenue","directorName","director","find","job","name","itemList","array","key","newArray","forEach","item","push","join","replace","profileList","map","topCast","slice","topCrew","castList","genreList","castProfile","crewProfile","Intl","NumberFormat","style","currency","format"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,SAASC,QAAT,CAAmB;AAACC,EAAAA,WAAD;AAAcC,EAAAA,IAAd;AAAoBC,EAAAA;AAApB,CAAnB,EAAgD;AAC9C,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA,KAAjB;AAAwBC,IAAAA,YAAxB;AAAsCC,IAAAA,OAAtC;AAA+CC,IAAAA,QAA/C;AAAyDC,IAAAA,YAAzD;AAAuEC,IAAAA,MAAvE;AAA+EC,IAAAA,WAA/E;AAA4FC,IAAAA,MAA5F;AAAoGC,IAAAA,OAApG;AAA6GC,IAAAA;AAA7G,MAAyHb,WAA/H;AAEA,MAAIc,YAAY,GAAG,EAAnB;AAEA,QAAMC,QAAQ,GAAGb,IAAI,CAACc,IAAL,CAAUd,IAAI,IAAIA,IAAI,CAACe,GAAL,KAAa,UAA/B,CAAjB;;AACA,MAAG,CAACF,QAAJ,EAAc;AAAE;AAAQ,GAAxB,MAA8B;AAACD,IAAAA,YAAY,GAAGC,QAAQ,CAACG,IAAxB;AAA6B;;AAE5D,QAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAChC,QAAIC,QAAQ,GAAG,EAAf;AACAF,IAAAA,KAAK,CAACG,OAAN,CAAcC,IAAI,IAAIF,QAAQ,CAACG,IAAT,CAAcD,IAAI,CAACH,GAAD,CAAlB,CAAtB;AACA,WAAOC,QAAQ,CAACI,IAAT,CAAc,IAAd,EAAoBC,OAApB,CAA4B,IAA5B,EAAkC,EAAlC,CAAP;AACA,GAJD;;AAMA,QAAMC,WAAW,GAAIR,KAAD,IAAW;AAC9B,WAAOA,KAAK,CAACS,GAAN,CAAUL,IAAI,IAAI;AACvB,aACD;AAAK,QAAA,SAAS,EAAC,cAAf;AAA8B,QAAA,GAAG,EAAEA,IAAI,CAAC,SAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,GAAG,EAAG,iCAAgCA,IAAI,CAAC,cAAD,CAAiB,EAAhE;AAAmE,QAAA,GAAG,EAAEA,IAAI,CAAC,MAAD,CAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIA,IAAI,CAAC,MAAD,CAAR,CAFD,EAGC;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0BA,IAAI,CAAC,WAAD,CAA9B,CAHD,CADC;AAOD,KARM,CAAP;AASA,GAVD;;AAYA,QAAMM,OAAO,GAAG7B,IAAI,CAAC8B,KAAL,CAAW,CAAX,EAAc,CAAd,CAAhB;AACA,QAAMC,OAAO,GAAG9B,IAAI,CAAC6B,KAAL,CAAW,CAAX,EAAc,CAAd,CAAhB;AACA,QAAME,QAAQ,GAAGd,QAAQ,CAACW,OAAD,EAAU,MAAV,CAAzB;AACA,QAAMI,SAAS,GAAGf,QAAQ,CAACR,MAAD,EAAS,MAAT,CAA1B;AACA,QAAMwB,WAAW,GAAGP,WAAW,CAACE,OAAD,CAA/B;AACA,QAAMM,WAAW,GAAGR,WAAW,CAACI,OAAD,CAA/B;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACD;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAG,mCAAkC7B,aAAc,EAA3D;AAA8D,IAAA,GAAG,EAAEC,KAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAL,CADD,EAEG;AAAG,IAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOC,YAAP,CAA9B,CAFH,EAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIC,OAAJ,CAHH,CAFF,CADC,EASD;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,KAAL,CADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAcU,YAAd,CAFD,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAcmB,QAAd,CAHD,EAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAkBzB,YAAlB,CAJD,EAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaI,OAAO,KAAK,CAAZ,GAAe,eAAf,GAAiC,GAAEA,OAAQ,UAAxD,CALD,EAMC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaC,OAAO,KAAK,CAAZ,GAAe,eAAf,GAAgC,IAAIwB,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AAACC,IAAAA,KAAK,EAAE,UAAR;AAAoBC,IAAAA,QAAQ,EAAE;AAA9B,GAA/B,EAAqEC,MAArE,CAA4E5B,OAA5E,CAA7C,CAND,EAOC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAYJ,MAAM,KAAK,CAAX,GAAc,eAAd,GAA+B,IAAI4B,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AAACC,IAAAA,KAAK,EAAE,UAAR;AAAoBC,IAAAA,QAAQ,EAAE;AAA9B,GAA/B,EAAqEC,MAArE,CAA4EhC,MAA5E,CAA3C,CAPD,EAQC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAYyB,SAAZ,CARD,EASC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAR,EACE3B,QADF,CATD,CADJ,EAcI;AAAK,IAAA,GAAG,EAAG,kCAAiCG,WAAY,EAAxD;AAA2D,IAAA,GAAG,EAAEN,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdJ,CATC,EAyBA;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,EAEC;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiC+B,WAAjC,CAFD,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHD,EAIC;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCC,WAAjC,CAJD,CAzBA,CADF;AAkCD;;AAID,eAAerC,QAAf","sourcesContent":["import React from 'react';\n\n\nfunction OneMovie( {movieSelect, cast, crew} )  {  \n  const { backdrop_path, title, vote_average, tagline, overview, release_date, budget, poster_path, genres, runtime, revenue } = movieSelect;   \n  \n  let directorName = ''\n\n  const director = crew.find(crew => crew.job === 'Director');\n  if(!director) { return } else {directorName = director.name}\n      \n  const itemList = (array, key) => {\n  \tlet newArray = [];  \t\n  \tarray.forEach(item => newArray.push(item[key]));\n  \treturn newArray.join(', ').replace(/,$/, \"\");\n  }\n\n  const profileList = (array) => {\n  \treturn array.map(item => {\n  \t  return (\n  \t\t<div className=\"cast-profile\" key={item['cast_id']}>\n\t  \t  <img src={`http://image.tmdb.org/t/p/w92/${item['profile_path']}`} alt={item['name']} />\n\t  \t\t<p>{item['name']}</p>\n\t  \t\t<p className=\"character\">{item['character']}</p>\n  \t\t  </div>\t\n  \t\t)\n  \t})\n  }\n\n  const topCast = cast.slice(0, 5);\n  const topCrew = crew.slice(0, 5);\n  const castList = itemList(topCast, 'name');\n  const genreList = itemList(genres, 'name');\n  const castProfile = profileList(topCast);\n  const crewProfile = profileList(topCrew);\n  \n  return(\n    <div className=\"one-movie\">\n\t  <div className=\"showcase\">\t\t  \t\n\t    <img src={`http://image.tmdb.org/t/p/w1280/${backdrop_path}`} alt={title} />\n\t    <div className=\"info\">\n\t  \t  <h1>{title}</h1>\n\t  \t    <p className=\"rating\">Rating: <span>{vote_average}</span></p>\n\t  \t    <p>{tagline}</p>\n\t  \t  </div>\n\t  </div>\n\t  <div className=\"up-section\">  \t    \n  \t    <div className=\"details\">\n  \t  \t  <h1>{title}</h1>\n  \t  \t  <p>Director: {directorName}</p>\n  \t  \t  <p>Starring: {castList}</p>\n  \t  \t  <p>Release date: {release_date}</p>\n  \t  \t  <p>Runtime: {runtime === 0? \"Not available\": `${runtime}minuites`}</p>\n  \t  \t  <p>Revenue: {revenue === 0? \"Not available\": new Intl.NumberFormat('en-US', {style: 'currency', currency: 'USD'}).format(revenue)}</p>\n  \t  \t  <p>Budget: {budget === 0? \"Not available\": new Intl.NumberFormat('en-US', {style: 'currency', currency: 'USD'}).format(budget)}</p>\n  \t  \t  <p>Genres: {genreList}</p>\n  \t  \t  <p>Plot:<br/>\n  \t  \t  \t{overview}\n  \t  \t  </p>\n  \t    </div>\n  \t    <img src={`http://image.tmdb.org/t/p/w342/${poster_path}`} alt={title} />  \t    \n \t  </div>\n \t  <div className=\"lower-section\">\n \t  \t<h1>Top Cast</h1>\n \t  \t<div className=\"cast-container\">{castProfile}</div>\n \t  \t<h1>Top Crew</h1>\n \t  \t<div className=\"crew-container\">{crewProfile}</div>\n \t  </div>\n\t</div>\n  )\t  \n}\n\n\n\nexport default OneMovie;"]},"metadata":{},"sourceType":"module"}