{"ast":null,"code":"var _jsxFileName = \"/Users/ashleycheung/Documents/WebDev/flashcard/src/Containers/App.js\";\nimport React, { Component } from 'react';\nimport CardList from '../Components/CardList';\nimport OneMovie from '../Components/OneMovie';\nimport Showcase from '../Components/Showcase';\nimport Navigation from '../Components/Navigation';\nimport apiKey from '../api.js';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSearch = e => {\n      const text = e.target.value;\n\n      if (text) {\n        fetch(`https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${text}`).then(resp => resp.json()).then(movies => this.setState({\n          movieSearch: movies.results\n        }));\n      } else {\n        this.setState({\n          movieSearch: []\n        });\n      }\n    };\n\n    this.movieClick = id => {\n      fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}`).then(resp => resp.json()).then(movie => this.setState({\n        movieSelect: movie,\n        route: 'movie',\n        movieSearch: []\n      })).catch(err => console.log('failed to fetch data'));\n      fetch(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${apiKey}`).then(resp => resp.json()).then(credit => this.setState({\n        cast: credit.cast,\n        crew: credit.crew\n      }));\n      fetch(`https://api.themoviedb.org/3/movie/${id}/similar?api_key=${apiKey}&language=en-US&page=1`).then(resp => resp.json()).then(movie => this.setState({\n        movieRec: movie.results\n      }));\n    };\n\n    this.logoClick = route => {\n      this.setState({\n        route: route\n      });\n    };\n\n    this.handleScroll = () => {\n      let y = window.scrollY; //use plain js codes\n\n      const navbar = document.querySelector('.navbar');\n\n      if (!navbar) {\n        return;\n      }\n\n      ;\n\n      if (y > 60) {\n        navbar.style.backgroundColor = \"black\";\n      } else {\n        navbar.style.backgroundColor = \"transparent\";\n      }\n    };\n\n    this.state = {\n      popular: [],\n      top_rated: [],\n      upcoming: [],\n      movieSelect: {},\n      cast: [],\n      crew: [],\n      route: 'home',\n      movieSearch: [],\n      movieRec: []\n    };\n  }\n\n  componentDidMount() {\n    const movieCategories = ['popular', 'top_rated', 'upcoming'];\n    movieCategories.forEach(category => {\n      fetch(`https://api.themoviedb.org/3/movie/${category}?api_key=${apiKey}&language=en-US&page=1`).then(resp => resp.json()).then(data => this.setState({\n        category: data.results\n      }));\n    }); //scroll event     \n\n    window.addEventListener('scroll', this.handleScroll, true);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  render() {\n    let moviePick;\n    const {\n      popular,\n      top_rated,\n      upcoming,\n      movieSelect,\n      cast,\n      crew,\n      route,\n      movieSearch,\n      movieRec\n    } = this.state;\n\n    if (!popular[0] || !top_rated[0] || !upcoming[0]) {\n      moviePick = [];\n    } else {\n      moviePick = [popular[0], top_rated[3], upcoming[0]];\n    }\n\n    const titleImages = array => {\n      return array.map(item => {\n        if (!item.poster_path) {\n          return null;\n        }\n\n        return React.createElement(\"img\", {\n          key: item.id,\n          src: `http://image.tmdb.org/t/p/w92${item.poster_path}`,\n          alt: item.title,\n          onClick: () => this.movieClick(item.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        });\n      });\n    };\n\n    const imageSearch = titleImages(movieSearch);\n    const imageRec = titleImages(movieRec);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(Navigation, {\n      logoClick: this.logoClick,\n      handleScroll: this.handleScroll,\n      handleSearch: this.handleSearch,\n      imageSearch: imageSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), route === 'home' ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Showcase, {\n      movies: moviePick,\n      movieClick: this.movieClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"movie-category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(CardList, {\n      movieClick: this.movieClick,\n      popular: [popular],\n      top_rated: top_rated,\n      upcoming: upcoming,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(OneMovie, {\n      movieSelect: movieSelect,\n      cast: cast,\n      crew: crew,\n      movieClick: this.movieClick,\n      imageRec: imageRec,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;\n/*\nmovie database\n\napi key = 17c3fa534657a7495834bc8fb45a9c05\nexample: https://api.themoviedb.org/3/movie/550?api_key=17c3fa534657a7495834bc8fb45a9c05\n\nurl structure as below\n- base url: https://api.themoviedb.org/3\n- 3 ways to search: /search; /discover; /find\n- movie method: /movie?\n- api_key={}\n- query=<xxx>\n\n1. text-based search by string\nhttps://api.themoviedb.org/3/search/movie?api_key={api_key}&query=Jack+Reacher\n\n2. search by id\nhttps://api.themoviedb.org/3/movie/343611?api_key={api_key}\n\n3. poster path\nbase url: http://image.tmdb.org/t/p/\nsize: \"w92\", \"w154\", \"w185\", \"w342\", \"w500\", \"w780\", or \"original\"\nposter_path: xBHvZcjRiWyobQ9kxBhO6B2dtRI.jpg\n\nbackdrop_path: 5BwqwxMEjeFtdknRV792Svo0K1v.jpg\nhttps://image.tmdb.org/t/p/w1280//5BwqwxMEjeFtdknRV792Svo0K1v.jpg\n\n\n\nsimilar movies\nhttps://api.themoviedb.org/3/movie/{movie_id}/similar?api_key=<<api_key>>&language=en-US&page=1\n*/","map":{"version":3,"sources":["/Users/ashleycheung/Documents/WebDev/flashcard/src/Containers/App.js"],"names":["React","Component","CardList","OneMovie","Showcase","Navigation","apiKey","App","constructor","props","handleSearch","e","text","target","value","fetch","then","resp","json","movies","setState","movieSearch","results","movieClick","id","movie","movieSelect","route","catch","err","console","log","credit","cast","crew","movieRec","logoClick","handleScroll","y","window","scrollY","navbar","document","querySelector","style","backgroundColor","state","popular","top_rated","upcoming","componentDidMount","movieCategories","forEach","category","data","addEventListener","componentWillUnmount","removeEventListener","render","moviePick","titleImages","array","map","item","poster_path","title","imageSearch","imageRec"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport CardList from '../Components/CardList';\nimport OneMovie from '../Components/OneMovie';\nimport Showcase from '../Components/Showcase';\nimport Navigation from '../Components/Navigation';\nimport apiKey from '../api.js';\nimport './App.css';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {      \n      popular: [],\n      top_rated: [],\n      upcoming: [],      \n      movieSelect: {},\n      cast: [],\n      crew:[],      \n      route: 'home',\n      movieSearch: [],\n      movieRec: []      \n    }    \n  };\n\n  componentDidMount() {    \n    const movieCategories = ['popular', 'top_rated', 'upcoming'];\n    movieCategories.forEach(category => {      \n      fetch(`https://api.themoviedb.org/3/movie/${category}?api_key=${apiKey}&language=en-US&page=1`)  \n        .then(resp => resp.json())\n        .then(data => this.setState({category: data.results}))                 \n    })\n    //scroll event     \n    window.addEventListener('scroll', this.handleScroll, true);\n  };\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  handleSearch = (e) => {\n    const text = e.target.value;    \n    if(text) {\n      fetch(`https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${text}`)\n        .then(resp => resp.json())\n        .then(movies => this.setState({ movieSearch: movies.results }))  \n    } else {\n      this.setState({ movieSearch: [] })\n    }    \n  };\n\n  movieClick = (id) => {\n    fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}`)\n      .then(resp => resp.json())\n      .then(movie => this.setState({\n          movieSelect: movie, \n          route: 'movie', \n          movieSearch: []\n        })        \n      )\n      .catch(err => console.log('failed to fetch data'));\n\n    fetch(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${apiKey}`)\n      .then(resp => resp.json())\n      .then(credit => this.setState({\n        cast: credit.cast,\n        crew: credit.crew\n      })) \n\n    fetch(`https://api.themoviedb.org/3/movie/${id}/similar?api_key=${apiKey}&language=en-US&page=1`)\n      .then(resp => resp.json())\n      .then(movie => this.setState({ movieRec: movie.results }))\n  };\n\n  logoClick = (route) => {\n    this.setState({route: route})          \n  }\n\n  handleScroll = () => {\n    let y = window.scrollY;\n    //use plain js codes\n    const navbar = document.querySelector('.navbar');    \n    if(!navbar) { return };\n    if(y > 60) {\n      navbar.style.backgroundColor = \"black\";\n    } else {      \n      navbar.style.backgroundColor = \"transparent\";\n    }\n  }\n\n  \n\n  render() {    \n    let moviePick;\n    const { popular, top_rated,upcoming, movieSelect, cast, crew, route, movieSearch, movieRec } = this.state;    \n    if(!popular[0] || !top_rated[0] || !upcoming[0]) {\n      moviePick = []  \n    } else { moviePick = [popular[0], top_rated[3], upcoming[0]] }\n\n    const titleImages = (array) => {\n      return array.map(item => {\n        if(!item.poster_path) { return null }\n        return (\n          <img \n            key={item.id}\n            src={`http://image.tmdb.org/t/p/w92${item.poster_path}`} \n            alt={item.title} \n            onClick={() => this.movieClick(item.id)}\n          />      \n        )\n      })\n    }\n    \n    const imageSearch = titleImages(movieSearch);\n    const imageRec = titleImages(movieRec);\n\n    return (      \n      <div>\n        <Navigation           \n          logoClick={this.logoClick} \n          handleScroll={this.handleScroll}\n          handleSearch={this.handleSearch}\n          imageSearch={imageSearch}\n        />\n        {route === 'home'?\n          <div>            \n            <Showcase \n              movies={moviePick} \n              movieClick={this.movieClick}\n            />\n            <div className=\"movie-category\">\n              <CardList \n                movieClick={this.movieClick}\n                popular={[popular]}\n                top_rated={top_rated}\n                upcoming={upcoming}\n              />              \n            </div>                       \n          </div>\n          :<div>            \n            <OneMovie \n              movieSelect={movieSelect} \n              cast={cast}\n              crew={crew}\n              movieClick={this.movieClick}\n              imageRec={imageRec}\n            />\n          </div>\n        }\n      </div>\n    )\n  }  \n}\n  \n\n\nexport default App;\n\n\n\n\n/*\nmovie database\n\napi key = 17c3fa534657a7495834bc8fb45a9c05\nexample: https://api.themoviedb.org/3/movie/550?api_key=17c3fa534657a7495834bc8fb45a9c05\n\nurl structure as below\n- base url: https://api.themoviedb.org/3\n- 3 ways to search: /search; /discover; /find\n- movie method: /movie?\n- api_key={}\n- query=<xxx>\n\n1. text-based search by string\nhttps://api.themoviedb.org/3/search/movie?api_key={api_key}&query=Jack+Reacher\n\n2. search by id\nhttps://api.themoviedb.org/3/movie/343611?api_key={api_key}\n\n3. poster path\nbase url: http://image.tmdb.org/t/p/\nsize: \"w92\", \"w154\", \"w185\", \"w342\", \"w500\", \"w780\", or \"original\"\nposter_path: xBHvZcjRiWyobQ9kxBhO6B2dtRI.jpg\n\nbackdrop_path: 5BwqwxMEjeFtdknRV792Svo0K1v.jpg\nhttps://image.tmdb.org/t/p/w1280//5BwqwxMEjeFtdknRV792Svo0K1v.jpg\n\n\n\nsimilar movies\nhttps://api.themoviedb.org/3/movie/{movie_id}/similar?api_key=<<api_key>>&language=en-US&page=1\n*/\n\n\n"]},"metadata":{},"sourceType":"module"}