{"ast":null,"code":"var _jsxFileName = \"/Users/ashleycheung/Documents/WebDev/flashcard/src/Containers/App.js\";\nimport React, { Component } from 'react';\nimport CardList from '../Components/CardList';\nimport OneMovie from '../Components/OneMovie';\nimport Showcase from '../Components/Showcase';\nimport apiKey from '../api.js';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSearch = e => {\n      this.setState({\n        searchfield: e.target.value\n      });\n    };\n\n    this.movieClick = id => {\n      fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}`).then(resp => resp.json()).then(movie => {\n        this.setState({\n          movieSelect: movie,\n          route: !this.state.route\n        });\n      });\n    };\n\n    this.state = {\n      popular: [],\n      top_rated: [],\n      upcoming: [],\n      moviePick: [],\n      movieSelect: {},\n      route: false,\n      searchfield: ''\n    };\n  }\n\n  componentDidMount() {\n    const movieCategories = ['popular', 'top_rated', 'upcoming'];\n    const movieLists = movieCategories.map((movieCategory, i) => {\n      fetch(`https://api.themoviedb.org/3/movie/${movieCategory}?api_key=${apiKey}&language=en-US&page=1`).then(resp => resp.json()).then(data => {\n        if (movieCategory === 'popular') {\n          this.setState({\n            popular: data.results\n          });\n        } else if (movieCategory === 'top_rated') {\n          this.setState({\n            top_rated: data.results\n          });\n        } else {\n          this.setState({\n            upcoming: data.results\n          });\n        }\n      });\n    });\n    this.setState({\n      moviePick: [this.state.popular[0], this.state.top_rated[0], this.state.upcoming[0]]\n    });\n  }\n\n  render() {\n    const {\n      popular,\n      top_rated,\n      upcoming,\n      movieSelect,\n      route\n    } = this.state;\n    return (\n      /*<navigation /> inside is a searchfield*/\n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, !route ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Showcase, {\n        movies: moviePick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Popular\"), React.createElement(CardList, {\n        movieClick: this.movieClick,\n        movies: popular,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Top-rated\"), React.createElement(CardList, {\n        movieClick: this.movieClick,\n        movies: top_rated,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Upcoming\"), React.createElement(CardList, {\n        movieClick: this.movieClick,\n        movies: upcoming,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(OneMovie, {\n        movieSelect: movieSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      })))\n    );\n  }\n\n}\n\nexport default App;\n/*\nmovie database\n\napi key = 17c3fa534657a7495834bc8fb45a9c05\nexample: https://api.themoviedb.org/3/movie/550?api_key=17c3fa534657a7495834bc8fb45a9c05\n\nurl structure as below\n- base url: https://api.themoviedb.org/3\n- 3 ways to search: /search; /discover; /find\n- movie method: /movie?\n- api_key={}\n- query=<xxx>\n\n1. text-based search by string\nhttps://api.themoviedb.org/3/search/movie?api_key={api_key}&query=Jack+Reacher\n\n2. search by id\nhttps://api.themoviedb.org/3/movie/343611?api_key={api_key}\n\n3. poster path\nbase url: http://image.tmdb.org/t/p/\nsize: \"w92\", \"w154\", \"w185\", \"w342\", \"w500\", \"w780\", or \"original\"\nposter_path: xBHvZcjRiWyobQ9kxBhO6B2dtRI.jpg\n\nbackdrop_path: 5BwqwxMEjeFtdknRV792Svo0K1v.jpg\nhttps://image.tmdb.org/t/p/w1280//5BwqwxMEjeFtdknRV792Svo0K1v.jpg\n\n*/","map":{"version":3,"sources":["/Users/ashleycheung/Documents/WebDev/flashcard/src/Containers/App.js"],"names":["React","Component","CardList","OneMovie","Showcase","apiKey","App","constructor","props","handleSearch","e","setState","searchfield","target","value","movieClick","id","fetch","then","resp","json","movie","movieSelect","route","state","popular","top_rated","upcoming","moviePick","componentDidMount","movieCategories","movieLists","map","movieCategory","i","data","results","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport CardList from '../Components/CardList';\nimport OneMovie from '../Components/OneMovie';\nimport Showcase from '../Components/Showcase';\nimport apiKey from '../api.js';\nimport './App.css';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      popular: [],\n      top_rated: [],\n      upcoming: [],\n      moviePick: [],\n      movieSelect: {},\n      route: false,      \n      searchfield: ''    \n    }    \n  };\n\n  componentDidMount() {\n    const movieCategories = ['popular', 'top_rated', 'upcoming'];\n    const movieLists = movieCategories.map((movieCategory, i) => {\n      fetch(`https://api.themoviedb.org/3/movie/${movieCategory}?api_key=${apiKey}&language=en-US&page=1`)  \n        .then(resp => resp.json())\n        .then(data => {\n          if(movieCategory === 'popular') {\n            this.setState({popular: data.results})\n          } else if(movieCategory === 'top_rated') {\n            this.setState({top_rated: data.results})\n          } else {\n            this.setState({upcoming: data.results})\n          }\n      })          \n    })\n    this.setState({\n      moviePick: [\n                    this.state.popular[0],\n                    this.state.top_rated[0],\n                    this.state.upcoming[0]\n                  ]\n    })\n\n  };\n\n  handleSearch = (e) => {\n    this.setState({\n      searchfield: e.target.value\n    });\n  };\n\n  movieClick = (id) => {\n    fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}`)\n      .then(resp => resp.json())\n      .then(movie => {        \n        this.setState({\n          movieSelect: movie,\n          route: !this.state.route          \n        });    \n      })        \n  };\n\n  render() {\n    const { popular, top_rated, upcoming, movieSelect, route } = this.state;    \n    return (\n      /*<navigation /> inside is a searchfield*/\n      <div>\n        {!route?\n          <div>\n            <Showcase movies={moviePick}/>           \n            <h1>Popular</h1>\n            <CardList \n              movieClick={this.movieClick}\n              movies={popular}          \n            />\n            <h1>Top-rated</h1>\n            <CardList \n              movieClick={this.movieClick}\n              movies={top_rated}          \n            />\n            <h1>Upcoming</h1>\n            <CardList \n              movieClick={this.movieClick}\n              movies={upcoming}          \n            />            \n          </div>\n          :<div>\n            <OneMovie movieSelect={movieSelect} />\n          </div>\n        }\n      </div>\n    )\n  }  \n}\n  \n\n\nexport default App;\n\n\n\n\n/*\nmovie database\n\napi key = 17c3fa534657a7495834bc8fb45a9c05\nexample: https://api.themoviedb.org/3/movie/550?api_key=17c3fa534657a7495834bc8fb45a9c05\n\nurl structure as below\n- base url: https://api.themoviedb.org/3\n- 3 ways to search: /search; /discover; /find\n- movie method: /movie?\n- api_key={}\n- query=<xxx>\n\n1. text-based search by string\nhttps://api.themoviedb.org/3/search/movie?api_key={api_key}&query=Jack+Reacher\n\n2. search by id\nhttps://api.themoviedb.org/3/movie/343611?api_key={api_key}\n\n3. poster path\nbase url: http://image.tmdb.org/t/p/\nsize: \"w92\", \"w154\", \"w185\", \"w342\", \"w500\", \"w780\", or \"original\"\nposter_path: xBHvZcjRiWyobQ9kxBhO6B2dtRI.jpg\n\nbackdrop_path: 5BwqwxMEjeFtdknRV792Svo0K1v.jpg\nhttps://image.tmdb.org/t/p/w1280//5BwqwxMEjeFtdknRV792Svo0K1v.jpg\n\n*/\n\n\n"]},"metadata":{},"sourceType":"module"}