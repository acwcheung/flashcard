{"ast":null,"code":"var _jsxFileName = \"/Users/ashleycheung/Documents/WebDev/flashcard/src/Containers/App.js\";\nimport React, { Component } from 'react';\nimport CardList from '../Components/CardList';\nimport OneMovie from '../Components/OneMovie';\nimport Showcase from '../Components/Showcase';\nimport Navigation from '../Components/Navigation';\nimport apiKey from '../api.js';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSearch = e => {\n      this.setState({\n        searchfield: e.target.value\n      });\n    };\n\n    this.movieClick = id => {\n      fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}`).then(resp => resp.json()).then(movie => {\n        this.setState({\n          movieSelect: movie,\n          route: 'feature'\n        });\n      });\n    };\n\n    this.onRoute = route => {\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      popular: [],\n      top_rated: [],\n      upcoming: [],\n      movieSelect: {},\n      route: 'home',\n      searchfield: ''\n    };\n  }\n\n  componentDidMount() {\n    const movieCategories = ['popular', 'top_rated', 'upcoming'];\n    movieCategories.forEach((movieCategory, i) => {\n      fetch(`https://api.themoviedb.org/3/movie/${movieCategory}?api_key=${apiKey}&language=en-US&page=1`).then(resp => resp.json()).then(data => {\n        if (movieCategory === 'popular') {\n          this.setState({\n            popular: data.results\n          });\n        } else if (movieCategory === 'top_rated') {\n          this.setState({\n            top_rated: data.results\n          });\n        } else {\n          this.setState({\n            upcoming: data.results\n          });\n        }\n      });\n    });\n  }\n\n  render() {\n    let moviePick;\n    const {\n      popular,\n      top_rated,\n      upcoming,\n      movieSelect,\n      route\n    } = this.state;\n\n    if (popular[0] === undefined || top_rated[0] === undefined || upcoming[0] === undefined) {\n      moviePick = [];\n    } else {\n      moviePick = [popular[2], top_rated[3], upcoming[0]];\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, route === 'home' ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Navigation, {\n      route: route,\n      onRoute: this.onRoute,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(Showcase, {\n      movies: moviePick,\n      movieClick: this.movieClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"movie-category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      id: \"popular\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Popular\"), React.createElement(CardList, {\n      movieClick: this.movieClick,\n      movies: popular,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      id: \"top-rated\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Top-rated\"), React.createElement(CardList, {\n      movieClick: this.movieClick,\n      movies: top_rated,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      id: \"upcoming\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Upcoming\"), React.createElement(CardList, {\n      movieClick: this.movieClick,\n      movies: upcoming,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Navigation, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(OneMovie, {\n      movieSelect: movieSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;\n/*\nmovie database\n\napi key = 17c3fa534657a7495834bc8fb45a9c05\nexample: https://api.themoviedb.org/3/movie/550?api_key=17c3fa534657a7495834bc8fb45a9c05\n\nurl structure as below\n- base url: https://api.themoviedb.org/3\n- 3 ways to search: /search; /discover; /find\n- movie method: /movie?\n- api_key={}\n- query=<xxx>\n\n1. text-based search by string\nhttps://api.themoviedb.org/3/search/movie?api_key={api_key}&query=Jack+Reacher\n\n2. search by id\nhttps://api.themoviedb.org/3/movie/343611?api_key={api_key}\n\n3. poster path\nbase url: http://image.tmdb.org/t/p/\nsize: \"w92\", \"w154\", \"w185\", \"w342\", \"w500\", \"w780\", or \"original\"\nposter_path: xBHvZcjRiWyobQ9kxBhO6B2dtRI.jpg\n\nbackdrop_path: 5BwqwxMEjeFtdknRV792Svo0K1v.jpg\nhttps://image.tmdb.org/t/p/w1280//5BwqwxMEjeFtdknRV792Svo0K1v.jpg\n\n*/","map":{"version":3,"sources":["/Users/ashleycheung/Documents/WebDev/flashcard/src/Containers/App.js"],"names":["React","Component","CardList","OneMovie","Showcase","Navigation","apiKey","App","constructor","props","handleSearch","e","setState","searchfield","target","value","movieClick","id","fetch","then","resp","json","movie","movieSelect","route","onRoute","state","popular","top_rated","upcoming","componentDidMount","movieCategories","forEach","movieCategory","i","data","results","render","moviePick","undefined"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport CardList from '../Components/CardList';\nimport OneMovie from '../Components/OneMovie';\nimport Showcase from '../Components/Showcase';\nimport Navigation from '../Components/Navigation';\nimport apiKey from '../api.js';\nimport './App.css';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      popular: [],\n      top_rated: [],\n      upcoming: [],      \n      movieSelect: {},\n      route: 'home',      \n      searchfield: ''    \n    }    \n  };\n\n  componentDidMount() {\n    const movieCategories = ['popular', 'top_rated', 'upcoming'];\n    movieCategories.forEach((movieCategory, i) => {\n      fetch(`https://api.themoviedb.org/3/movie/${movieCategory}?api_key=${apiKey}&language=en-US&page=1`)  \n        .then(resp => resp.json())\n        .then(data => {\n          if(movieCategory === 'popular') {\n            this.setState({popular: data.results});            \n          } else if(movieCategory === 'top_rated') {\n            this.setState({top_rated: data.results});            \n          } else {\n            this.setState({upcoming: data.results});            \n          }\n      })          \n    })\n  };\n\n  handleSearch = (e) => {\n    this.setState({\n      searchfield: e.target.value\n    });\n  };\n\n  movieClick = (id) => {\n    fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}`)\n      .then(resp => resp.json())\n      .then(movie => {        \n        this.setState({\n          movieSelect: movie,\n          route: 'feature'          \n        });    \n      })        \n  };\n\n  onRoute = (route) => {\n    this.setState({route: route})\n  }\n\n  render() {\n    let moviePick\n    const { popular, top_rated, upcoming, movieSelect, route } = this.state;\n    if(popular[0] === undefined || top_rated[0] === undefined || upcoming[0] === undefined) {\n      moviePick = []  \n    } else {\n      moviePick = [popular[2], top_rated[3], upcoming[0]]  \n    }\n    \n    return (      \n      <div>\n        {route === 'home'?\n          <div>\n            <Navigation \n              route={route}\n              onRoute={this.onRoute} \n            />\n            <Showcase \n              movies={moviePick}\n              movieClick={this.movieClick}              \n            />\n            <div className=\"movie-category\">\n              <h1 id=\"popular\">Popular</h1>\n              <CardList \n                movieClick={this.movieClick}\n                movies={popular}          \n              />\n              <h1 id=\"top-rated\">Top-rated</h1>\n              <CardList \n                movieClick={this.movieClick}\n                movies={top_rated}          \n              />\n              <h1 id=\"upcoming\">Upcoming</h1>\n              <CardList \n                movieClick={this.movieClick}\n                movies={upcoming}          \n              />  \n            </div>                       \n          </div>\n          :<div>\n            <Navigation />\n            <OneMovie movieSelect={movieSelect} />\n          </div>\n        }\n      </div>\n    )\n  }  \n}\n  \n\n\nexport default App;\n\n\n\n\n/*\nmovie database\n\napi key = 17c3fa534657a7495834bc8fb45a9c05\nexample: https://api.themoviedb.org/3/movie/550?api_key=17c3fa534657a7495834bc8fb45a9c05\n\nurl structure as below\n- base url: https://api.themoviedb.org/3\n- 3 ways to search: /search; /discover; /find\n- movie method: /movie?\n- api_key={}\n- query=<xxx>\n\n1. text-based search by string\nhttps://api.themoviedb.org/3/search/movie?api_key={api_key}&query=Jack+Reacher\n\n2. search by id\nhttps://api.themoviedb.org/3/movie/343611?api_key={api_key}\n\n3. poster path\nbase url: http://image.tmdb.org/t/p/\nsize: \"w92\", \"w154\", \"w185\", \"w342\", \"w500\", \"w780\", or \"original\"\nposter_path: xBHvZcjRiWyobQ9kxBhO6B2dtRI.jpg\n\nbackdrop_path: 5BwqwxMEjeFtdknRV792Svo0K1v.jpg\nhttps://image.tmdb.org/t/p/w1280//5BwqwxMEjeFtdknRV792Svo0K1v.jpg\n\n*/\n\n\n"]},"metadata":{},"sourceType":"module"}