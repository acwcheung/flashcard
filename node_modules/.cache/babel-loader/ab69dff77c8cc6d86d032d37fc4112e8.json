{"ast":null,"code":"var _jsxFileName = \"/Users/ashleycheung/Documents/WebDev/flashcard/src/App.js\";\nimport React, { Component } from 'react';\nimport CardList from './Components/CardList';\nimport SearchBox from './Components/SearchBox'; //.is the same directory; ./ go to the folder; ..leave the directory!\n//import the data from another js file, the variable is an object of the file\n\nimport { robots } from './robots';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //import the data, put it in the initial state\n      robots: [],\n      searchfield: ''\n    };\n    this.handleSearch = this.handleSearch.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(resp => resp.json()).then(users => this.setState({\n      robots: users\n    }));\n  }\n\n  handleSearch(e) {\n    //directly take the event from the child \n    this.setState({\n      searchfield: e.target.value\n    });\n  }\n\n  render() {\n    const filteredRobots = this.state.robots.filter(robot => {\n      return robot.name.toLowerCase().includes(this.state.searchfield);\n    });\n\n    if (this.state.robots.length === 0) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Loading\");\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"RoboFriend\"), React.createElement(SearchBox, {\n        searchfield: this.state.searchfield,\n        onSearch: this.handleSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(CardList, {\n        robots: filteredRobots,\n        searchfield: this.state.searchfield,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ashleycheung/Documents/WebDev/flashcard/src/App.js"],"names":["React","Component","CardList","SearchBox","robots","App","constructor","props","state","searchfield","handleSearch","bind","componentDidMount","fetch","then","resp","json","users","setState","e","target","value","render","filteredRobots","filter","robot","name","toLowerCase","includes","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB,C,CACA;AACA;;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAC1BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACX;AACAJ,MAAAA,MAAM,EAAE,EAFG;AAGXK,MAAAA,WAAW,EAAE;AAHF,KAAb;AAKA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACQC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADhB,EAEGF,IAFH,CAEQG,KAAK,IAAI,KAAKC,QAAL,CAAc;AAC3Bd,MAAAA,MAAM,EAAEa;AADmB,KAAd,CAFjB;AAKD;;AAEDP,EAAAA,YAAY,CAACS,CAAD,EAAI;AACd;AACA,SAAKD,QAAL,CAAc;AACZT,MAAAA,WAAW,EAAEU,CAAC,CAACC,MAAF,CAASC;AADV,KAAd;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAMC,cAAc,GAAG,KAAKf,KAAL,CAAWJ,MAAX,CAAkBoB,MAAlB,CAAyBC,KAAK,IAAI;AACrD,aAAOA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkC,KAAKpB,KAAL,CAAWC,WAA7C,CAAP;AACC,KAFkB,CAAvB;;AAGA,QAAG,KAAKD,KAAL,CAAWJ,MAAX,CAAkByB,MAAlB,KAA6B,CAAhC,EAAmC;AACjC,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF;AAGD,KAJD,MAIO;AACL,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE,oBAAC,SAAD;AACE,QAAA,WAAW,EAAE,KAAKrB,KAAL,CAAWC,WAD1B;AAEE,QAAA,QAAQ,EAAE,KAAKC,YAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAME,oBAAC,QAAD;AACE,QAAA,MAAM,EAAEa,cADV;AAEE,QAAA,WAAW,EAAE,KAAKf,KAAL,CAAWC,WAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CADF;AAaD;AACF;;AAjDyB;;AAsD5B,eAAeJ,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport CardList from './Components/CardList';\nimport SearchBox from './Components/SearchBox';\n//.is the same directory; ./ go to the folder; ..leave the directory!\n//import the data from another js file, the variable is an object of the file\nimport { robots } from './robots'\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //import the data, put it in the initial state\n      robots: [],\n      searchfield: ''\n    }\n    this.handleSearch = this.handleSearch.bind(this);\n  };\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(resp => resp.json())\n      .then(users => this.setState({\n        robots: users\n      }))\n  }\n\n  handleSearch(e) {\n    //directly take the event from the child \n    this.setState({\n      searchfield: e.target.value\n    });\n  }\n\n  render() {\n    const filteredRobots = this.state.robots.filter(robot => {\n        return robot.name.toLowerCase().includes(this.state.searchfield)\n        })\n    if(this.state.robots.length === 0) {\n      return(\n        <div>Loading</div> \n      )\n    } else {\n      return (\n        <div>\n          <h1>RoboFriend</h1>\n          <SearchBox \n            searchfield={this.state.searchfield} \n            onSearch={this.handleSearch}\n          />\n          <CardList \n            robots={filteredRobots}\n            searchfield={this.state.searchfield}  \n          />\n        </div>\n      );     \n    }\n  }\n}\n  \n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}